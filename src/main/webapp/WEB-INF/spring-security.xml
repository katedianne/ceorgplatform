<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
    
        <!-- a shared request cache is required for multiple http elements -->
<!--        <beans:bean id="requestCache" class="org.springframework.security.web.savedrequest.HttpSessionRequestCache" /></beans:beans>-->
    
        <!-- remove security from static resources to avoid going through the security filter chain -->
        <http pattern="/resources/**" security="none" />
        
	<http auto-config="true" use-expressions="true">
        <csrf disabled="true"/>
         
        <intercept-url pattern="/" access="permitAll()" />


 
 
        <intercept-url pattern="/home" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
        <intercept-url pattern="/reservation" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
        <intercept-url pattern="/announcement" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
        <intercept-url pattern="/calendar" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
        <intercept-url pattern="/letter" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
        <intercept-url pattern="/notes" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
        
        <intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/other/**" access="isAuthenticated()" />
 
        <access-denied-handler error-page="/403" />
 
        <form-login 
            login-page='/' 
            login-processing-url="/login"
            default-target-url="/home" 
            always-use-default-target="false"
            authentication-failure-url="/?error=true" 
            username-parameter="username"
            password-parameter="password" />
 
        <logout logout-url="/logout" logout-success-url="/"
            delete-cookies="JSESSIONID" invalidate-session="true" />
        
         <!-- reference to the shared request cache -->
<!--        <request-cache ref="requestCache"/>-->
 
    </http>
    <beans:import resource="classpath:async/config/user-beans.xml"></beans:import>
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="user1" password="12345" authorities="ROLE_USER" />
                <user name="admin1" password="12345" authorities="ROLE_USER, ROLE_ADMIN" />
            </user-service>
        </authentication-provider>
 
 
  <!-- spring authentication configuration via database -->

        <authentication-provider>
            <jdbc-user-service data-source-ref="datasource"
                users-by-username-query="select username,password, status_id as enabled from users where username=?"
                authorities-by-username-query="select username, concat('ROLE_', role) role from roles r inner join users u on u.role_id = r.role_id where username =?  " />
        </authentication-provider>


        <!-- authentication from database -->
<!--        <authentication-provider>
            <jdbc-user-service data-source-ref="datasource"
                users-by-username-query="select username,password, status_id as enabled from users where username=?"
                    authorities-by-username-query="select username, role from roles r inner join users u on u.role_id = r.role_id where username =?  " />
        </authentication-provider>-->
 
    </authentication-manager>
 
</beans:beans>